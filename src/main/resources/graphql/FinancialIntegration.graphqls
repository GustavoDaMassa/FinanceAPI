enum AggregatorType {
    BELVO
    PLUGGY
}

type FinancialIntegrationDTO {
    id: ID!
    aggregator: AggregatorType!
    linkId: String!
    status: String
    createdAt: String!
    expiresAt: String
    userId: ID!
    accounts: [AccountDTO!]
}

input FinancialIntegrationInput {
    aggregator: AggregatorType!
    linkId: String!
    userId: ID!
}

extend type Mutation {
    createFinancialIntegration(input: FinancialIntegrationInput!, accountId: ID!): FinancialIntegrationDTO
    updateFinancialIntegration(id: ID!, input: FinancialIntegrationInput!): FinancialIntegrationDTO
    deleteFinancialIntegration(id: ID!): FinancialIntegrationDTO
}

extend type Query {
    findFinancialIntegrationById(id: ID!): FinancialIntegrationDTO
    listFinancialIntegrationsByUser(userId: ID!): [FinancialIntegrationDTO!]!
    listAccountsByIntegration(id: ID!): [AccountDTO!]!
}
